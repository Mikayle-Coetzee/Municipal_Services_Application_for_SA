<!--Documentation Header
    Author: Mikayle Coetzee (ST10023767)
    Course: PROG7312 POE 2024-->
    
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"

    xmlns:classes="clr-namespace:PROG7312_ST10023767.Controllers">

    <Style x:Key="NavButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ContentPresenter.HorizontalAlignment" Value="Center"/>
        <Setter Property="ContentPresenter.VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="pack://application:,,,/FontAwesome.Sharp;component/Fonts/#FontAwesome"/>
    </Style>
    
    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->

    <Style x:Key="PlainButtonDark" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="150" Height="30"
                                      CornerRadius="20"
                                      Background="{TemplateBinding Background}"
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Top">
                        <ContentPresenter VerticalAlignment="Center"
                                         HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->
    <!-- Define the style for the button -->
    <Style x:Key="RoundedButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="White" 
                            CornerRadius="10" 
                            BorderThickness="0"
                            Opacity="0.8">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <!-- FontAwesome Icon -->
                            <fa:IconImage Icon="ArrowAltCircleRight" Width="16" Height="16" Margin="5" VerticalAlignment="Center" Foreground="{DynamicResource darkestSolidColorBrush}"/>
                            <!-- Button Content -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Additional properties for the button -->
        <Setter Property="Foreground" Value="{DynamicResource darkestSolidColorBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10"/>
    </Style>



    <Style x:Key="RoundedButtonStyleMain" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource greenSolidColorBrush}"
                         CornerRadius="10" 
                         BorderThickness="0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <!-- FontAwesome Icon -->
                            <fa:IconImage Icon="FaceSmile" Width="16" Height="16" Margin="5" VerticalAlignment="Center" Foreground="{DynamicResource whiteSolidColorBrush}"/>
                            <!-- Button Content -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Additional properties for the button -->
        <Setter Property="Foreground" Value="{DynamicResource blueSolidColorBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10"/>
    </Style>


    <Style x:Key="RoundedButtonStyleMiddle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource greenSolidColorBrush}"
                      CornerRadius="10" 
                      BorderThickness="0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <!-- FontAwesome Icon -->
                            <fa:IconImage Icon="File" Width="16" Height="16" Margin="5" VerticalAlignment="Center" Foreground="{DynamicResource whiteSolidColorBrush}"/>
                            <!-- Button Content -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Additional properties for the button -->
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10"/>
    </Style>
    <Style x:Key="RoundedButtonStylePost" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource greenSolidColorBrush}"
                   CornerRadius="10" 
                   BorderThickness="0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <!-- FontAwesome Icon -->
                            <fa:IconImage Icon="Check" Width="16" Height="16" Margin="5" VerticalAlignment="Center" Foreground="{DynamicResource whiteSolidColorBrush}"/>
                            <!-- Button Content -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Additional properties for the button -->
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style x:Key="RoundedButtonStyleDelete" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource redSolidColorBrush}"
                   CornerRadius="10" 
                   BorderThickness="0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <!-- FontAwesome Icon -->
                            <fa:IconImage Icon="Trash" Width="16" Height="16" Margin="5" VerticalAlignment="Center" Foreground="{DynamicResource whiteSolidColorBrush}"/>
                            <!-- Button Content -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Additional properties for the button -->
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10"/>
    </Style>

    <Style x:Key="RoundedButtonStyleCancle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{DynamicResource redSolidColorBrush}"
                  CornerRadius="10" 
                  BorderThickness="0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <!-- FontAwesome Icon -->
                            <fa:IconImage Icon="Cancel" Width="16" Height="16" Margin="5" VerticalAlignment="Center" Foreground="{DynamicResource whiteSolidColorBrush}"/>
                            <!-- Button Content -->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Additional properties for the button -->
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10"/>
    </Style>
    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->
    <Style x:Key="iconInIconButtonLight" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, 
            RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource redSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->

    <Style x:Key="MainWindowRedButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource redSolidColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="Impact"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="Auto" Height="55"
                                        CornerRadius="20"
                                        Background="{TemplateBinding Background}"
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Top">
                        <ContentPresenter VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                          Margin="15,0,15,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource whiteSolidColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource redSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->

    <Style x:Key="MainWindowRedButtonNotEnabled" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource darkRedSolidColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="Impact"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="Auto" Height="55"
                                    CornerRadius="20"
                                    Background="{TemplateBinding Background}"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Top">
                        <ContentPresenter VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                      Margin="15,0,15,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource whiteSolidColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource darkRedSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->

    <Style x:Key="CustomImageButtonReportIssue" TargetType="Button">
        <Setter Property="Height" Value="120"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="34,0,0,74" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ButtonImage" Source="/Images/Buttons/report_image.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/report_image_hover.png"/>
                        </Trigger>
                        <!-- Click effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/report_image_click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->

    <Style x:Key="CustomImageButtonEvent" TargetType="Button">
        <Setter Property="Height" Value="120"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="258,0,0,74" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ButtonImage" Source="/Images/Buttons/event_image.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/event_image_hover.png"/>
                        </Trigger>
                        <!-- Click effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/event_image_click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--・♫ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ♫・-->

    <Style x:Key="CustomImageButtonStatus" TargetType="Button">
        <Setter Property="Height" Value="120"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="478,0,0,74" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ButtonImage" Source="/Images/Buttons/status_image.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/status_image_hover.png"/>
                        </Trigger>
                        <!-- Click effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/status_image_click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>