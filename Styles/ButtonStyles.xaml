<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="MainWindowRedButton" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource redSolidColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="Impact"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="Auto" Height="55"
                                        CornerRadius="20"
                                        Background="{TemplateBinding Background}"
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Top">
                        <ContentPresenter VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                          Margin="15,0,15,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource whiteSolidColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource redSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainWindowRedButtonNotEnabled" TargetType="Button">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource darkRedSolidColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource whiteSolidColorBrush}"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="FontFamily" Value="Impact"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Width="Auto" Height="55"
                                    CornerRadius="20"
                                    Background="{TemplateBinding Background}"
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Top">
                        <ContentPresenter VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                      Margin="15,0,15,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button Style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0,0,0,5"/>
                <Setter Property="Background" Value="{DynamicResource whiteSolidColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource darkRedSolidColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="CustomImageButtonReportIssue" TargetType="Button">
        <Setter Property="Height" Value="120"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="34,0,0,74" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ButtonImage" Source="/Images/Buttons/report_image.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/report_image_hover.png"/>
                        </Trigger>
                        <!-- Click effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/report_image_click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomImageButtonEvent" TargetType="Button">
        <Setter Property="Height" Value="120"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="258,0,0,74" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ButtonImage" Source="/Images/Buttons/event_image.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/event_image_hover.png"/>
                        </Trigger>
                        <!-- Click effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/event_image_click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomImageButtonStatus" TargetType="Button">
        <Setter Property="Height" Value="120"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="478,0,0,74" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image x:Name="ButtonImage" Source="/Images/Buttons/status_image.png" Stretch="Fill"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Hover effect -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/status_image_hover.png"/>
                        </Trigger>
                        <!-- Click effect -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonImage" Property="Source" Value="/Images/Buttons/status_image_click.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>